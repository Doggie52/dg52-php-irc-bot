case '!add':
	$line = substr($this->ex['fullcommand'], 5);
	// Writes the line to the file
	if(write_definition($line, $this->response['info']) != 0)
	{
		debug_message("Keyword \"".$this->ex['command'][1]."\" was defined by ".$this->ex['username']."!");
		send_data("PRIVMSG", "A definition for keyword \"".$this->ex['command'][1]."\" was added!", $this->ex['username']);
		// Reload responses
		$this->response = reload_speech();
	}
	else
	{
		send_data("PRIVMSG", "An error occurred when adding the definition!", $this->ex['username']);
	}
	break;
case '!d':
case '!define':
	$keyword = strtolower($this->ex['command'][1]);
	if($keyword == "list")
	{
		// If the user wants to list all definitions
		send_data("PRIVMSG", "All definitions available:", $this->ex['username']);
		$keywordlist = "";
		foreach($this->response['info'] as $term => $definition)
		{
			$keywordlist .= $term.", ";
		}
		send_data("PRIVMSG", substr($keywordlist, 0, -2), $this->ex['username']);
	}
	elseif(isset($this->response['info'][$keyword]))
	{
		// If the entered keyword matches a definition available
		send_data("PRIVMSG", $this->response['info'][$keyword], $this->ex['receiver']);
		debug_message("Keyword \"".$this->ex['command'][1]."\" was defined upon request by ".$this->ex['username']."!");
	}
	else
	{
		// If the entered keyword does not match a definition available
		send_data("PRIVMSG", "No help for this item was found", $this->ex['receiver']);
		debug_message("Keyword \"".$this->ex['command'][1]."\" was undefined but requested by ".$this->ex['username']."!");
	}
	break;
case '!google':
	$query = substr($this->ex['fullcommand'], 8);
	$results = google_search_html($query);
	foreach($results as $results)
	{
		send_data("PRIVMSG", "#".$results['id']." ".format_text("bold", $results['title'])." (".$results['url'].")", $this->ex['receiver']);
		send_data("PRIVMSG", format_text("italic", $results['description']), $this->ex['receiver']);
	}
	break;
case '!youtube':
	$query = substr($this->ex['fullcommand'], 9);
	$results = youtube_search_html($query);
	foreach($results as $results)
	{
		send_data("PRIVMSG", "#".$results['id']." ".format_text("bold", $results['title'])." (".$results['url'].")", $this->ex['receiver']);
		send_data("PRIVMSG", format_text("italic", $results['description']), $this->ex['receiver']);
	}
	break;